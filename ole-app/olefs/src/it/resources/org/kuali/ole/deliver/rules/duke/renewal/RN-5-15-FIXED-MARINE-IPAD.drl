package org.kuali.ole.deliver.checkout

import org.kuali.ole.OLEConstants
import org.kuali.ole.deliver.util.NoticeInfo
import org.kuali.ole.deliver.bo.OleLoanDocument
import org.kuali.ole.deliver.bo.OlePatronDocument
import org.kuali.ole.deliver.util.OleItemRecordForCirc
import org.kuali.ole.deliver.util.DroolsResponse
import org.kuali.ole.deliver.drools.DroolsConstants


rule "RN-5-15-FIXED-MARINE-IPAD-LS-THAN-1-RN"
agenda-group "renewal validation"
activation-group "renewal validation"
when

$l: OleLoanDocument(Integer.valueOf(getNumberOfRenewals()) < 1)

$n: NoticeInfo()
$d : DroolsResponse()

$p: OlePatronDocument(getBorrowerTypeCode() in ("FACULTY","GRADST","UG"))

$i: OleItemRecordForCirc(getItemType() in ("IPAD"),
getItemLibraryLocation() in ("MARINE"))

then
$l.loanPeriod(OLEConstants.FIXED_DUE_DATE,"14-D"); // This method takes due date and recall period as arguments.
$l.setCirculationPolicyId("RN-5-15-FIXED-MARINE-IPAD-LS-THAN-2-RN");
$d.setRuleMatched(true);
$n.setNoticeType("NO-PS-STDLOAN");
 end

rule "RN-5-15-FIXED-MARINE-IPAD-GR-THAN-1-RN"
agenda-group "renewal validation"
activation-group "renewal validation"
when

$l: OleLoanDocument(Integer.valueOf(getNumberOfRenewals()) >= 1)
$d: DroolsResponse()
$n: NoticeInfo()

$p: OlePatronDocument(getBorrowerTypeCode() in ("FACULTY","GRADST","UG"))

$i: OleItemRecordForCirc(getItemType() in ("IPAD"),
getItemLibraryLocation() in ("MARINE"))

then
$d.addErrorMessage("Patron has more than allowed limit of renewals.");
$d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
$l.setCirculationPolicyId("RN-5-15-FIXED-MARINE-IPAD-GR-THAN-2-RN");
$l.loanPeriod(OLEConstants.FIXED_DUE_DATE,"14-D"); // This method takes due date and recall period as arguments.
end
